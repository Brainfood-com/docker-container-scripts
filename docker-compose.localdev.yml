version: '3.4'

x-logging: &_logging
  driver: "json-file"
  options:
    max-size: "50m"
    max-file: "10"

x-nginx: &_nginx-base
  build:
    args:
      - http_proxy
      - NGINX_UPGRADE=1
    context: .
    dockerfile: Dockerfile.nginx
    network: build
  image: localdev-nginx
  logging:
    <<: *_logging

x-postfix: &_postfix-base
  build:
    args:
      - http_proxy
    context: .
    dockerfile: Dockerfile.postfix
    network: build
  cap_add:
    - SYS_PTRACE
  domainname: localdev
  image: localdev-postfix
  logging:
    <<: *_logging
  restart: always
  volumes:
    - home:/home

networks:
  default:
  mail:
    external:
      name: mail
  build:
    external:
      name: build
  nginx:
    external:
      name: nginx

volumes:
  nexus-data:
  home:
  squid-data:

  nginxproxy-conf:
  nginxproxy-vhost:
  nginxproxy-html:

services:
  nginx:
    <<: *_nginx-base
    container_name: nginx
    networks:
      nginx:
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - nginxproxy-conf:/etc/nginx/conf.d:ro
      - nginxproxy-vhost:/etc/nginx/vhost.d:ro
      - nginxproxy-html:/usr/share/nginx/html
      - /srv/ssl-certificates:/etc/nginx/certs:ro

  dockergen:
    build:
      args:
        - http_proxy
      context: .
      dockerfile: Dockerfile.dockergen
      network: build
    command: -notify-sighup nginx -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: nginx-gen
    image: localdev-dockergen
    networks:
      nginx:
    restart: always
    volumes:
      - nginxproxy-conf:/etc/nginx/conf.d:rw
      - nginxproxy-vhost:/etc/nginx/vhost.d:ro
      - /srv/ssl-certificates:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro

  letsencrypt:
    environment:
      - NGINX_PROXY_CONTAINER=nginx
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes:
      - nginxproxy-vhost:/etc/nginx/vhost.d:rw
      - nginxproxy-html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /srv/ssl-certificates:/etc/nginx/certs:rw

  roundcube:
    build:
      args:
        - http_proxy
      context: .
      dockerfile: Dockerfile.roundcube
      network: build
    environment:
      VIRTUAL_HOST: mail.${HOSTING_VHOST_SUFFIX}
    image: localdev-roundcube
    logging:
      <<: *_logging
    networks:
      default:
      nginx:
    restart: always

  dovecot:
    build:
      args:
        - http_proxy
      context: .
      dockerfile: Dockerfile.dovecot
      network: build
    domainname: localdev
    environment:
      - DOVECOT_HOSTUSER_PASSWORD
    image: localdev-dovecot
    logging:
      <<: *_logging
    networks:
      default:
        aliases:
          - imap
    restart: always
    volumes:
      - type: volume
        source: home
        target: /home
        volume:
          nocopy: false

  postfix:
    <<: *_postfix-base
    environment:
      POSTFIX_CATCHALL: 'true'
    networks:
      mail:
        aliases:
          - smtp
          - mail # for ssmtp

  squid:
    build:
      context: .
      dockerfile: Dockerfile.squid
    environment:
      SQUID_maximum_object_size: 1 GB
    image: localdev-squid
    logging:
      <<: *_logging
    networks:
      build:
        aliases:
          - http-proxy
    volumes:
      - squid-data:/var/spool/squid
    restart: always

  nexus3:
    build:
      context: .
      dockerfile: Dockerfile.nexus3
    image: localdev-nexus3
    logging:
      <<: *_logging
    volumes:
      - nexus-data:/nexus-data
    restart: always

  nexus3-nginx:
    <<: *_nginx-base
#    configs:
#      - source: nexus-nginx-nginx.conf
#        target: /etc/nginx/conf.d/nexus-nginx.conf
#        mode: 0444
    depends_on:
      - nexus3
    environment:
      - CERT_NAME=${VHOST_NEXUS_CERT_NAME}
#      - LETSENCRYPT_VHOST=docker-registry.${HOSTING_VHOST_SUFFIX},docker-nexus.${HOSTING_VHOST_SUFFIX}
#      - LETSENCRYPT_EMAIL=${VHOST_LETSENCRYPT_EMAIL}
      - VIRTUAL_HOST=docker-registry-mirror.${HOSTING_VHOST_SUFFIX},docker-registry.${HOSTING_VHOST_SUFFIX},nexus.${HOSTING_VHOST_SUFFIX},maven-mirror.${HOSTING_VHOST_SUFFIX}
      - HTTPS_METHOD=noredirect
    networks:
      default:
      build:
        aliases:
          - docker-registry-mirror
          - docker-registry
          - maven-mirror
          - npm-registry
          - npm-proxy
      nginx:
    restart: always
    volumes:
      - ./etc/nginx-nexus3/conf.d/:/etc/nginx/conf.d/:ro


